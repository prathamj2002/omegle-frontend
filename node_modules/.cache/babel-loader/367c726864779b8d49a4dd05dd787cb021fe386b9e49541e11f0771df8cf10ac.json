{"ast":null,"code":"var _jsxFileName = \"/Users/prathamlakhani/Desktop/Omegle-clone/frontend/src/components/Video.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport \"../styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5001\", {\n  transports: [\"websocket\"]\n});\nconst Video = () => {\n  _s();\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  const peerConnection = useRef(null);\n  const [partnerId, setPartnerId] = useState(null);\n  useEffect(() => {\n    console.log(\"Requesting match...\");\n    socket.emit(\"find_match\"); // Request a match only once\n\n    socket.on(\"match_found\", partner => {\n      console.log(`✅ Matched with ${partner}`);\n      setPartnerId(partner);\n      startCall(partner);\n    });\n    socket.on(\"disconnect_peer\", () => {\n      var _peerConnection$curre;\n      console.log(\"❌ Partner disconnected\");\n      if (remoteVideoRef.current) remoteVideoRef.current.srcObject = null;\n      (_peerConnection$curre = peerConnection.current) === null || _peerConnection$curre === void 0 ? void 0 : _peerConnection$curre.close();\n      peerConnection.current = null;\n      socket.emit(\"find_match\"); // Rejoin queue\n    });\n    return () => {\n      socket.off(\"match_found\");\n      socket.off(\"disconnect_peer\");\n    };\n  }, []); // Empty dependency array ensures it runs only once\n\n  const startCall = async partner => {\n    peerConnection.current = createPeerConnection(partner);\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    });\n    localVideoRef.current.srcObject = stream;\n    stream.getTracks().forEach(track => peerConnection.current.addTrack(track, stream));\n  };\n  const createPeerConnection = partner => {\n    const pc = new RTCPeerConnection({\n      iceServers: [{\n        urls: \"stun:stun.l.google.com:19302\"\n      }]\n    });\n    pc.onicecandidate = event => {\n      if (event.candidate) {\n        socket.emit(\"ice-candidate\", {\n          candidate: event.candidate,\n          target: partner\n        });\n      }\n    };\n    pc.ontrack = event => {\n      remoteVideoRef.current.srcObject = event.streams[0];\n    };\n    return pc;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: localVideoRef,\n      autoPlay: true,\n      playsInline: true,\n      muted: true,\n      className: \"local-video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: remoteVideoRef,\n      autoPlay: true,\n      playsInline: true,\n      className: \"remote-video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(Video, \"nbdIzf4fRAEPJNF+hyKHJbzHq7s=\");\n_c = Video;\nexport default Video;\nvar _c;\n$RefreshReg$(_c, \"Video\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","socket","transports","Video","_s","localVideoRef","remoteVideoRef","peerConnection","partnerId","setPartnerId","console","log","emit","on","partner","startCall","_peerConnection$curre","current","srcObject","close","off","createPeerConnection","stream","navigator","mediaDevices","getUserMedia","video","audio","getTracks","forEach","track","addTrack","pc","RTCPeerConnection","iceServers","urls","onicecandidate","event","candidate","target","ontrack","streams","className","children","ref","autoPlay","playsInline","muted","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/prathamlakhani/Desktop/Omegle-clone/frontend/src/components/Video.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport \"../styles.css\";\n\nconst socket = io(\"http://localhost:5001\", { transports: [\"websocket\"] });\n\nconst Video = () => {\n    const localVideoRef = useRef(null);\n    const remoteVideoRef = useRef(null);\n    const peerConnection = useRef(null);\n    const [partnerId, setPartnerId] = useState(null);\n\n    useEffect(() => {\n        console.log(\"Requesting match...\");\n        socket.emit(\"find_match\"); // Request a match only once\n\n        socket.on(\"match_found\", (partner) => {\n            console.log(`✅ Matched with ${partner}`);\n            setPartnerId(partner);\n            startCall(partner);\n        });\n\n        socket.on(\"disconnect_peer\", () => {\n            console.log(\"❌ Partner disconnected\");\n            if (remoteVideoRef.current) remoteVideoRef.current.srcObject = null;\n            peerConnection.current?.close();\n            peerConnection.current = null;\n            socket.emit(\"find_match\"); // Rejoin queue\n        });\n\n        return () => {\n            socket.off(\"match_found\");\n            socket.off(\"disconnect_peer\");\n        };\n    }, []); // Empty dependency array ensures it runs only once\n\n    const startCall = async (partner) => {\n        peerConnection.current = createPeerConnection(partner);\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n        localVideoRef.current.srcObject = stream;\n        stream.getTracks().forEach(track => peerConnection.current.addTrack(track, stream));\n    };\n\n    const createPeerConnection = (partner) => {\n        const pc = new RTCPeerConnection({\n            iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }]\n        });\n\n        pc.onicecandidate = (event) => {\n            if (event.candidate) {\n                socket.emit(\"ice-candidate\", { candidate: event.candidate, target: partner });\n            }\n        };\n\n        pc.ontrack = (event) => {\n            remoteVideoRef.current.srcObject = event.streams[0];\n        };\n\n        return pc;\n    };\n\n    return (\n        <div className=\"video-container\">\n            <video ref={localVideoRef} autoPlay playsInline muted className=\"local-video\" />\n            <video ref={remoteVideoRef} autoPlay playsInline className=\"remote-video\" />\n        </div>\n    );\n};\n\nexport default Video;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,EAAE;EAAEI,UAAU,EAAE,CAAC,WAAW;AAAE,CAAC,CAAC;AAEzE,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,aAAa,GAAGT,MAAM,CAAC,IAAI,CAAC;EAClC,MAAMU,cAAc,GAAGV,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMW,cAAc,GAAGX,MAAM,CAAC,IAAI,CAAC;EACnC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEhDF,SAAS,CAAC,MAAM;IACZe,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClCV,MAAM,CAACW,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;;IAE3BX,MAAM,CAACY,EAAE,CAAC,aAAa,EAAGC,OAAO,IAAK;MAClCJ,OAAO,CAACC,GAAG,CAAC,kBAAkBG,OAAO,EAAE,CAAC;MACxCL,YAAY,CAACK,OAAO,CAAC;MACrBC,SAAS,CAACD,OAAO,CAAC;IACtB,CAAC,CAAC;IAEFb,MAAM,CAACY,EAAE,CAAC,iBAAiB,EAAE,MAAM;MAAA,IAAAG,qBAAA;MAC/BN,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrC,IAAIL,cAAc,CAACW,OAAO,EAAEX,cAAc,CAACW,OAAO,CAACC,SAAS,GAAG,IAAI;MACnE,CAAAF,qBAAA,GAAAT,cAAc,CAACU,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBG,KAAK,CAAC,CAAC;MAC/BZ,cAAc,CAACU,OAAO,GAAG,IAAI;MAC7BhB,MAAM,CAACW,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;IAEF,OAAO,MAAM;MACTX,MAAM,CAACmB,GAAG,CAAC,aAAa,CAAC;MACzBnB,MAAM,CAACmB,GAAG,CAAC,iBAAiB,CAAC;IACjC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAML,SAAS,GAAG,MAAOD,OAAO,IAAK;IACjCP,cAAc,CAACU,OAAO,GAAGI,oBAAoB,CAACP,OAAO,CAAC;IACtD,MAAMQ,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IACtFtB,aAAa,CAACY,OAAO,CAACC,SAAS,GAAGI,MAAM;IACxCA,MAAM,CAACM,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIvB,cAAc,CAACU,OAAO,CAACc,QAAQ,CAACD,KAAK,EAAER,MAAM,CAAC,CAAC;EACvF,CAAC;EAED,MAAMD,oBAAoB,GAAIP,OAAO,IAAK;IACtC,MAAMkB,EAAE,GAAG,IAAIC,iBAAiB,CAAC;MAC7BC,UAAU,EAAE,CAAC;QAAEC,IAAI,EAAE;MAA+B,CAAC;IACzD,CAAC,CAAC;IAEFH,EAAE,CAACI,cAAc,GAAIC,KAAK,IAAK;MAC3B,IAAIA,KAAK,CAACC,SAAS,EAAE;QACjBrC,MAAM,CAACW,IAAI,CAAC,eAAe,EAAE;UAAE0B,SAAS,EAAED,KAAK,CAACC,SAAS;UAAEC,MAAM,EAAEzB;QAAQ,CAAC,CAAC;MACjF;IACJ,CAAC;IAEDkB,EAAE,CAACQ,OAAO,GAAIH,KAAK,IAAK;MACpB/B,cAAc,CAACW,OAAO,CAACC,SAAS,GAAGmB,KAAK,CAACI,OAAO,CAAC,CAAC,CAAC;IACvD,CAAC;IAED,OAAOT,EAAE;EACb,CAAC;EAED,oBACIhC,OAAA;IAAK0C,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5B3C,OAAA;MAAO4C,GAAG,EAAEvC,aAAc;MAACwC,QAAQ;MAACC,WAAW;MAACC,KAAK;MAACL,SAAS,EAAC;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChFnD,OAAA;MAAO4C,GAAG,EAAEtC,cAAe;MAACuC,QAAQ;MAACC,WAAW;MAACJ,SAAS,EAAC;IAAc;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3E,CAAC;AAEd,CAAC;AAAC/C,EAAA,CA7DID,KAAK;AAAAiD,EAAA,GAALjD,KAAK;AA+DX,eAAeA,KAAK;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}